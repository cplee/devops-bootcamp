---
AWSTemplateFormatVersion: '2010-09-09'
Description: Continuous delivery pipeline of a container application
Parameters:
  GitHubUser:
    Type: String
    Description: GitHub User
    Default: "cplee"
  GitHubRepo:
    Type: String
    Description: GitHub Repo to pull from. Only the Name. not the URL
    Default: "devops-bootcamp"
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: "master"
  GitHubToken:
    NoEcho: true
    Type: String
    Description: Secret. It might look something like 9b189a1654643522561f7b3ebd44a1531a4287af OAuthToken with access to Repo. Go to https://github.com/settings/tokens
    MinLength: 40
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "GitHub Configuration"
        Parameters:
          - GitHubToken
          - GitHubUser
          - GitHubRepo
          - GitHubBranch
    ParameterLabels:
      GitHubToken:
        default: GitHub OAuth2 Token
      GitHubUser: 
        default: GitHub User/Org Name
      GitHubRepo: 
        default: GitHub Repository Name
      GitHubBranch: 
        default: GitHub Branch Name
Resources:
  ImageRepo: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Sub ${AWS::StackName}
  CodeBuildImage:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildRole
    Properties:
      Name: !Sub ${AWS::StackName}-image
      Description: Build image
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:18.09.0
        EnvironmentVariables:
          - Name: REPOSITORY_NAME
            Value: !Ref ImageRepo
      Source:
        Type: CODEPIPELINE
        BuildSpec: toolchain/buildspec.yml
      TimeoutInMinutes: 10
  PipelineBucket:
    Type: AWS::S3::Bucket
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore: 
        Type: S3
        Location: 
          Ref: PipelineBucket
      Stages:
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: '1'
            Provider: GitHub
          OutputArtifacts:
          - Name: SourceOutput
          Configuration:
            Owner: !Ref GitHubUser
            Repo: !Ref GitHubRepo
            Branch: !Ref GitHubBranch
            OAuthToken: !Ref GitHubToken
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: Image
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          InputArtifacts:
          - Name: SourceOutput
          OutputArtifacts:
          - Name: ImageOutput
          Configuration:
            ProjectName: !Ref CodeBuildImage
          RunOrder: 1
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: deploy-container-application
        PolicyDocument:
          Statement:
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            Resource: 
            - !Sub arn:aws:s3:::${PipelineBucket}/*
            Effect: Allow
          - Action:
            - iam:CreateRole
            - iam:DeleteRole
            - iam:PassRole
            - iam:GetRole
            - iam:PutRolePolicy
            - iam:DeleteRolePolicy
            - iam:AttachRolePolicy
            - iam:DetachRolePolicy
            - iam:GetRolePolicy
            - iam:ListRolePolicies
            - iam:UpdateAssumeRolePolicy
            Effect: Allow
            Resource: 
            - !Sub arn:aws:iam::${AWS::AccountId}:role/drifter-app-HelloFunctionRole-*
          - Action:
            - cloudformation:CreateChangeSet
            Resource: 
            - !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31
            Effect: Allow
          Version: '2012-10-17'
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: ecr-integration
        PolicyDocument:
          Statement:
          - Effect: Allow
            Resource: 
            - !GetAtt ImageRepo.Arn 
            Action: 
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
              - "ecr:DescribeRepositories"
          - Effect: Allow
            Resource: 
            - '*'
            Action: 
              - "ecr:GetAuthorizationToken"
      - PolicyName: codepipeline-integration
        PolicyDocument:
          Statement:
          - Action:
            - s3:PutObject
            - s3:GetObject
            - s3:GetObjectVersion
            Resource: 
            - !Sub arn:aws:s3:::${PipelineBucket}/*
            Effect: Allow
          - Action:
            - s3:ListBucket
            - s3:ListBucketMultipartUploads
            - s3:GetBucketVersioning
            Resource: 
            - !Sub arn:aws:s3:::${PipelineBucket}
            Effect: Allow
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-*
            - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-*:*
            Effect: Allow
          - Action:
            - codepipeline:GetPipelineState
            Effect: Allow
            Resource:
            - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}
          - Action:
            - codepipeline:GetJobDetails
            - codepipeline:PollForJobs
            Effect: Allow
            Resource:
            - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}
          - Action:
            - codepipeline:AcknowledgeJob
            - codepipeline:PutJobFailureResult
            - codepipeline:PutJobSuccessResult
            Effect: Allow
            Resource: '*'
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: codepipeline-service
        PolicyDocument:
          Statement:
          - Action:
            - codebuild:StartBuild
            - codebuild:StopBuild
            - codebuild:BatchGetProjects
            - codebuild:BatchGetBuilds
            Resource: 
            - !GetAtt CodeBuildImage.Arn
            Effect: Allow
          - Action:
            - s3:PutObject
            - s3:GetObject
            - s3:GetObjectVersion
            Resource: 
            - !Sub arn:aws:s3:::${PipelineBucket}/*
            Effect: Allow
          - Action:
            - s3:ListBucket
            - s3:ListBucketMultipartUploads
            - s3:GetBucketVersioning
            Resource: 
            - !Sub arn:aws:s3:::${PipelineBucket}
            Effect: Allow
      - PolicyName: cloudformation-service
        PolicyDocument:
          Statement:
          - Action:
            - cloudformation:CreateChangeSet
            - cloudformation:DescribeStacks
            - cloudformation:DescribeChangeSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:DeleteChangeSet
            Resource: 
            - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/drifter-app/*
            Effect: Allow
          - Action:
            - iam:PassRole
            Resource: 
            - !GetAtt CloudFormationRole.Arn
            Effect: Allow
          Version: '2012-10-17'
Outputs:
  CodePipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
